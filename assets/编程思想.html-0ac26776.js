import{ac as i,H as d,I as c,G as e,U as n,O as t,ad as r,X as a}from"./framework-fadc5609.js";const l={},h=e("h2",{id:"oop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#oop","aria-hidden":"true"},"#"),n(" OOP")],-1),_=e("p",null,[e("code",null,"OOP"),n("面向对象编程")],-1),p=e("p",null,"抽象事物特征；高内聚低耦合",-1),u=e("p",null,"特点：封装、继承、多态",-1),f=e("h2",{id:"fp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fp","aria-hidden":"true"},"#"),n(" FP")],-1),g=e("code",null,"FP",-1),x={href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,"特点：确定的输入、输出；没有副作用，相对独立（vue、react开发思想）",-1),m={id:"frp",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#frp","aria-hidden":"true"},"#",-1),I=e("p",null,[e("code",null,"FRP"),n("函数响应式编程")],-1),k=e("p",null,"适合需要对事件流进行复杂组合应用的场景；多用在异步场景",-1),O={href:"https://rxjs.dev/index#rxjs",target:"_blank",rel:"noopener noreferrer"},P=r('<h2 id="aop" tabindex="-1"><a class="header-anchor" href="#aop" aria-hidden="true">#</a> AOP</h2><p><code>AOP</code> 面向切面编程，是对<code>OOP</code>的补充</p><p><strong>在不破坏封装功能的前提下，额外增加功能</strong></p><ol><li>扩展功能方便，不影响业务之间的逻辑</li><li>逻辑集中管理</li><li>更有利于代码复用</li></ol><h2 id="di-ioc" tabindex="-1"><a class="header-anchor" href="#di-ioc" aria-hidden="true">#</a> DI&amp;IoC</h2><p><code>IoC</code>(控制反转)是一种思想&amp;设计模式，<code>DI</code>(依赖注入)是它的具体实现</p><p><code>IoC</code>一种面向对象编程中的一种设计原则，用来降低计算机代码之间的耦合度，其基本思想是：借助于“第三方”实现具有依赖关系的对象之间的解耦</p><p><code>DI</code>是一种用于实现<code>IoC</code>的设计模式，它允许在类外创建依赖对象，并通过不同的方式将这些对象提供给类</p><h2 id="nestjs核心概念" tabindex="-1"><a class="header-anchor" href="#nestjs核心概念" aria-hidden="true">#</a> nestjs核心概念</h2><figure><img src="https://zfh-nanjing-bucket.oss-cn-nanjing.aliyuncs.com/blog-images/nest核心概念.png" alt="nest核心概念" tabindex="0"><figcaption>nest核心概念</figcaption></figure><ul><li><p>控制器层负责处理请求，返回响应</p></li><li><p>服务层负责提供方法和操作，只包含业务逻辑</p></li><li><p>数据接入层负责访问数据库中的数据</p></li></ul>',11),v={id:"nestjs应用生命周期",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#nestjs应用生命周期","aria-hidden":"true"},"#",-1),C=e("figure",null,[e("img",{src:"https://zfh-nanjing-bucket.oss-cn-nanjing.aliyuncs.com/blog-images/nestjs生命周期.png",alt:"nestjs生命周期",tabindex:"0"}),e("figcaption",null,"nestjs生命周期")],-1),F=e("h2",{id:"nestjs模块化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nestjs模块化","aria-hidden":"true"},"#"),n(" nestjs模块化")],-1);function N(V,y){const o=a("ExternalLinkIcon"),s=a("Badge");return d(),c("div",null,[h,_,p,u,f,e("p",null,[g,e("a",x,[n("函数式编程"),t(o)])]),j,e("h2",m,[b,n(" FRP"),t(s,{text:"了解"})]),I,k,e("p",null,[n("典型案例："),e("a",O,[n("RxJS"),t(o)])]),P,e("h2",v,[B,n(" nestjs应用生命周期 "),t(s,{text:"重要"})]),C,F])}const E=i(l,[["render",N],["__file","编程思想.html.vue"]]);export{E as default};
