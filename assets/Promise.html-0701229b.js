const e=JSON.parse(`{"key":"v-724a3fc0","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/ES6/Promise.html","title":"Promise","lang":"zh-CN","frontmatter":{"title":"Promise","tag":["Promise","异步"],"category":["前端进阶","ES6"],"description":"初识 Promise promise是es6进行异步编程的新解决方案--- 旧方案指的是回调函数 从语法上来说，Promise 是一个构造函数 从功能上来说，Promise 对象用来封装一个异步操作并可以获取其成功或失败的结果值 为什么要使用 Promise? 1. 指定回调函数的方式更加灵活： 旧的：必须在启动异步任务前指定; promise：启动异...","head":[["meta",{"property":"og:url","content":"https://zfhblog.top/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/ES6/Promise"}],["meta",{"property":"og:site_name","content":"ZFH's Blog"}],["meta",{"property":"og:title","content":"Promise"}],["meta",{"property":"og:description","content":"初识 Promise promise是es6进行异步编程的新解决方案--- 旧方案指的是回调函数 从语法上来说，Promise 是一个构造函数 从功能上来说，Promise 对象用来封装一个异步操作并可以获取其成功或失败的结果值 为什么要使用 Promise? 1. 指定回调函数的方式更加灵活： 旧的：必须在启动异步任务前指定; promise：启动异..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-14T02:10:49.000Z"}],["meta",{"property":"article:tag","content":"Promise"}],["meta",{"property":"article:tag","content":"异步"}],["meta",{"property":"article:modified_time","content":"2022-12-14T02:10:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Promise\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-14T02:10:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"初识 Promise","slug":"初识-promise","link":"#初识-promise","children":[]},{"level":2,"title":"为什么要使用 Promise?","slug":"为什么要使用-promise","link":"#为什么要使用-promise","children":[]},{"level":2,"title":"Promise 的基本流程","slug":"promise-的基本流程","link":"#promise-的基本流程","children":[]},{"level":2,"title":"Promise 的基本用法","slug":"promise-的基本用法","link":"#promise-的基本用法","children":[]},{"level":2,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[{"level":3,"title":"Promise.prototype.then()","slug":"promise-prototype-then","link":"#promise-prototype-then","children":[]},{"level":3,"title":"Promise.prototype.catch()","slug":"promise-prototype-catch","link":"#promise-prototype-catch","children":[]},{"level":3,"title":"Promise.prototype.finally()","slug":"promise-prototype-finally","link":"#promise-prototype-finally","children":[]}]},{"level":2,"title":"构造函数方法","slug":"构造函数方法","link":"#构造函数方法","children":[{"level":3,"title":"Promise.resolve()","slug":"promise-resolve","link":"#promise-resolve","children":[]},{"level":3,"title":"Promise.reject()","slug":"promise-reject","link":"#promise-reject","children":[]},{"level":3,"title":"Promise.all()","slug":"promise-all","link":"#promise-all","children":[]},{"level":3,"title":"Promise.race()和 Promise.allSettled()","slug":"promise-race-和-promise-allsettled","link":"#promise-race-和-promise-allsettled","children":[]},{"level":3,"title":"Promise.any()","slug":"promise-any","link":"#promise-any","children":[]}]},{"level":2,"title":"Promise 的关键问题","slug":"promise-的关键问题","link":"#promise-的关键问题","children":[]},{"level":2,"title":"Promise 的应用","slug":"promise-的应用","link":"#promise-的应用","children":[]},{"level":2,"title":"手写 Promise","slug":"手写-promise","link":"#手写-promise","children":[]}],"git":{"createdTime":1670983849000,"updatedTime":1670983849000,"contributors":[{"name":"zhangfanhang","email":"543629463@qq.com","commits":1}]},"readingTime":{"minutes":12.41,"words":3724},"filePathRelative":"前端开发/前端进阶/ES6/Promise.md","localizedDate":"2022年12月14日","copyright":{},"autoDesc":true}`);export{e as data};
