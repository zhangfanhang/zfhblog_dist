const e=JSON.parse(`{"key":"v-080e7088","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/ES6/Generator.html","title":"Generator","lang":"zh-CN","frontmatter":{"title":"Generator","tag":["Generator"],"category":["前端进阶","ES6"],"description":"Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同。 Generator 函数有多种理解角度。语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。 执行 Generator 函数会返回一个遍历器对象，也就是说，Generator 函数除了状态机，还是一个遍历器对象生成函数。返回的...","head":[["meta",{"property":"og:url","content":"https://zfhblog.top/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/ES6/Generator"}],["meta",{"property":"og:site_name","content":"ZFH's Blog"}],["meta",{"property":"og:title","content":"Generator"}],["meta",{"property":"og:description","content":"Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同。 Generator 函数有多种理解角度。语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。 执行 Generator 函数会返回一个遍历器对象，也就是说，Generator 函数除了状态机，还是一个遍历器对象生成函数。返回的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-14T02:10:49.000Z"}],["meta",{"property":"article:tag","content":"Generator"}],["meta",{"property":"article:modified_time","content":"2022-12-14T02:10:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Generator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-14T02:10:49.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1670983849000,"updatedTime":1670983849000,"contributors":[{"name":"zhangfanhang","email":"543629463@qq.com","commits":1}]},"readingTime":{"minutes":0.78,"words":234},"filePathRelative":"前端开发/前端进阶/ES6/Generator.md","localizedDate":"2022年12月14日","copyright":{},"autoDesc":true}`);export{e as data};
