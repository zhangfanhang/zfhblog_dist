import{ac as t,H as p,I as c,G as n,U as s,O as e,ad as o,X as l}from"./framework-fadc5609.js";const i={},r=n("p",null,[s("Iterator 是一个统一的"),n("code",null,"遍历方式"),s(", 我们一般"),n("strong",null,"不会直接"),s("使用 Iterator 去遍历")],-1),u=n("h2",{id:"for-of-的用法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#for-of-的用法","aria-hidden":"true"},"#"),s(" for...of 的用法")],-1),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of",target:"_blank",rel:"noopener noreferrer"},k=o(`<p>1.认识 for...of：<strong>Iterator 的封装</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>与 break,continue 一起使用</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span>
    <span class="token comment">// continue</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 for...of 中取得数组的索引</li></ol><ul><li>keys()得到的是索引的可遍历对象，可以遍历出索引值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>values()得到的是值的可遍历对象，可以遍历出值，<code>多此一举</code>，和直接使用 for...of 方法效果一样</p></li><li><p>entries()得到的是索引+值组成的<code>数组</code>的可遍历对象</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token comment">// 解构赋值</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原生可遍历与非原生可遍历" tabindex="-1"><a class="header-anchor" href="#原生可遍历与非原生可遍历" aria-hidden="true">#</a> 原生可遍历与非原生可遍历</h2><ol><li>什么是可遍历</li></ol><p>只要有 <strong>[Symbol.iterator]</strong> 方法，就是可遍历的，只要可遍历，就可以使用 for...of 循环来统一遍历</p><ol start="2"><li>原生可遍历的有哪些？</li></ol><ul><li>数组</li><li>字符串</li><li>Set</li><li>Map</li><li>arguments</li><li>NodeList</li></ul><ol start="3"><li>非原生可遍历的有哪些？ 对象</li></ol><h2 id="使用了-iterator-的场合" tabindex="-1"><a class="header-anchor" href="#使用了-iterator-的场合" aria-hidden="true">#</a> 使用了 Iterator 的场合</h2><ol><li><p>数组的展开运算符</p></li><li><p>数组的解构赋值</p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hi&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>只要是原生可遍历的就可以按照数组的方式展开，解构</strong></p><h2 id="遍历总结" tabindex="-1"><a class="header-anchor" href="#遍历总结" aria-hidden="true">#</a> 遍历总结</h2><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h3><ul><li><p>用于遍历<code>数组</code>,<code>字符串</code>,<code>类数组对象</code>(NodeList,arguments)</p></li><li><p>可以使用 break,continue 语句</p></li></ul><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> forEach</h3><p><strong>forEach 方法对数组的每个元素执行一次给定的函数</strong></p><ul><li><p>用于遍历<code>数组</code>, <code>Set</code>和<code>Map</code>数据结构</p></li><li><p>可以通过回调函数参数传入<strong>value,key 和自身</strong>,同时可以改变 this 指向(<strong>回调函数为非箭头函数时</strong>)</p></li><li><p><strong>不能使用 break 和 continue 语句</strong></p></li></ul>`,25),v={href:"https://blog.csdn.net/weixin_46837985/article/details/112211133",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"for-in",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#for-in","aria-hidden":"true"},"#"),s(" for in")],-1),f={href:"https://blog.csdn.net/weixin_34051201/article/details/91377138",target:"_blank",rel:"noopener noreferrer"},h=o('<ul><li>用于遍历<code>数组</code>(<strong>不推荐，for...in 不应该用于迭代一个关注索引顺序的 <code>Array</code></strong>),<code>对象</code>,<code>字符串</code></li><li>只能获得 key,<strong>没有 value</strong></li><li>可以使用 break 和 continue 语句</li></ul><h3 id="for-of" tabindex="-1"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for of</h3><ul><li>用于遍历<code>数组</code>,<code>字符串</code>,<code>Set</code>,<code>Map</code>,<code>NodeList</code>,<code>arguments</code>(<strong>原生可遍历</strong>),<strong>不能直接遍历对象</strong></li><li>默认获得 value,但可以通过 keys(),values(),entries()获得对应可遍历对象</li><li>可以使用 break 和 continue 语句</li></ul>',3);function b(g,_){const a=l("ExternalLinkIcon");return p(),c("div",null,[r,u,n("p",null,[n("a",d,[s("mdn 文档"),e(a)])]),k,n("p",null,[n("a",v,[s("map 和 forEach:数组中 forEach() 和 map() 的区别"),e(a)])]),m,n("p",null,[n("a",f,[s("JavaScript for...in 循环出来的对象属性顺序到底是什么规律？"),e(a)])]),h])}const w=t(i,[["render",b],["__file","遍历器与for...of循环.html.vue"]]);export{w as default};
