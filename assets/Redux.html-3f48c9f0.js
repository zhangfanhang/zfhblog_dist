import{ac as d,H as k,I as v,G as n,U as s,O as c,ae as a,ad as p,X as u}from"./framework-fadc5609.js";const m={},b={class:"hint-container tip"},h=n("p",{class:"hint-container-title"},"推荐阅读",-1),g={href:"https://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://redux.js.org/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://redux-toolkit.js.org/",target:"_blank",rel:"noopener noreferrer"},w=p(`<p><code>Redux</code> 就是一个帮助我们管理 <code>State</code> 的容器</p><h2 id="redux-的核心概念" tabindex="-1"><a class="header-anchor" href="#redux-的核心概念" aria-hidden="true">#</a> Redux 的核心概念</h2><h3 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> store</h3><p>使用<strong>普通对象</strong>来描述应用的<code>state</code>,存放在<code>store</code>中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">todos</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Eat food&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">completed</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Exercise&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">completed</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> action</h3><p><code>Redux </code>要求我们通过 <code>action</code> 来更新数据：</p><ul><li><p>所有数据的变化，必须通过派发(<code>dispatch</code>)<code>action</code> 来更新</p></li><li><p><code>action </code>是一个普通的 JavaScript 对象，用来描述这次更新的 <code>typ</code>e 和 <code>content</code></p></li></ul><p>强制使用 <code>action </code>的好处是可以清晰的知道数据到底发生了什么样的变化</p><h3 id="reducer" tabindex="-1"><a class="header-anchor" href="#reducer" aria-hidden="true">#</a> reducer</h3><p>但是如何将 <code>state</code> 和 <code>action</code> 联系在一起呢？答案就是<code> reducer</code></p><ul><li><code>reducer</code> 是一个<strong>纯函数</strong></li><li><code>reducer</code> 做的事情就是将传入的<code> state</code> 和 <code>action</code> 结合起来生成一个新的 <code>state</code></li></ul><h2 id="redux-的三大原则" tabindex="-1"><a class="header-anchor" href="#redux-的三大原则" aria-hidden="true">#</a> Redux 的三大原则</h2><h3 id="单一数据源" tabindex="-1"><a class="header-anchor" href="#单一数据源" aria-hidden="true">#</a> 单一数据源</h3><ul><li>整个应用程序的 <code>state</code> 被存储在一颗 <code>object tree</code> 中，并且这个 <code>object tree</code> 只存储在一个 <code>store </code>中</li><li><code>Redux</code> 并没有强制让我们不能创建多个 <code>Store</code>，但是那样做并不利于数据的维护</li><li>单一的数据源可以让整个应用程序的 <code>state</code> 变得方便维护、追踪、修改</li></ul><h3 id="state-是只读的" tabindex="-1"><a class="header-anchor" href="#state-是只读的" aria-hidden="true">#</a> State 是只读的</h3><ul><li>唯一修改 <code>State</code> 的方法一定是触发 <code>action</code>，不要试图在其他地方通过任何的方式来修改 <code>State</code></li><li>这样就确保了 <code>view </code>层或网络请求都不能直接修改 <code>state</code>，它们只能通过 <code>action</code> 来描述自己想要如何修改<code> state</code></li><li>这样可以保证所有的修改都被集中化处理，并且按照严格的顺序来执行，所以不需要担心<code> race condition</code>（竟态）的问题</li></ul><h3 id="使用纯函数来执行修改" tabindex="-1"><a class="header-anchor" href="#使用纯函数来执行修改" aria-hidden="true">#</a> 使用纯函数来执行修改</h3><ul><li>通过<code>reducer</code>将 旧<code> state</code> 和 <code>actions</code> 联系在一起，并且返回一个新的 <code>state</code></li><li>随着应用程序的复杂度增加，我们可以将<code> reducer</code> 拆分成多个小的 <code>reducer</code>，分别操作不同 <code>state tree</code> 的一部分</li><li>所有的 <code>reducer</code> 都应该是纯函数，不能产生任何的副作用</li></ul><h2 id="在-react-项目中使用-redux" tabindex="-1"><a class="header-anchor" href="#在-react-项目中使用-redux" aria-hidden="true">#</a> 在 react 项目中使用 redux</h2><h2 id="安装redux" tabindex="-1"><a class="header-anchor" href="#安装redux" aria-hidden="true">#</a> 安装redux</h2>`,21),f=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` redux
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` redux
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=p('<h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><p>创建<code> store</code> 文件夹，创建 4 个文件：</p><ul><li><code>actionCreators.js</code>（创建 <code>action</code> 的文件）</li><li><code>constants.js</code>（定义 <code>action</code> 名称常量)</li><li><code>reducer.js</code>(将<code> aciton</code> 和 <code>state</code> 联系在一起)</li><li><code>index.js</code>(导出创建好的<code> store</code>)</li></ul><p>这里实现一个简单的 couter 案例：</p>',4),S=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"JIA_ACTION"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./constants'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token constant"},"JIAA_ACTION"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"JIA_ACTION"),n("span",{class:"token punctuation"},","),s(`
    num`),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"JIA_ACTION"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'JIA_ACTION'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),T=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"JIA_ACTION"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./constants'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" defaultStore "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"counter"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"reducer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("state "),n("span",{class:"token operator"},"="),s(" defaultStore"),n("span",{class:"token punctuation"},","),s(" action")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"switch"),s(),n("span",{class:"token punctuation"},"("),s("action"),n("span",{class:"token punctuation"},"."),s("type"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"case"),s(),n("span",{class:"token constant"},"JIA_ACTION"),n("span",{class:"token operator"},":"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s("state"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"counter"),n("span",{class:"token operator"},":"),s(" action"),n("span",{class:"token punctuation"},"."),s("num "),n("span",{class:"token operator"},"+"),s(" state"),n("span",{class:"token punctuation"},"."),s("counter "),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(`
      `),n("span",{class:"token keyword"},"return"),s(` state
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createStore "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'redux'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" reducer "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./reducer'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" store "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createStore"),n("span",{class:"token punctuation"},"("),s("reducer"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(` store
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=p("<p>接着创建 <code>utils</code> 文件夹， 创建2个文件：</p><ul><li><code>connect.js</code>(返回一个抽象<code> react</code> 与<code> redux</code> 连接逻辑的高阶组件)</li><li><code>context.js</code>(利用 <code>context</code> 全局共享<code> store</code>)</li></ul>",2),R=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" PureComponent "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" storeContext "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./context'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"connect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("mapStateToProps"),n("span",{class:"token punctuation"},","),s(" mapDispatchToProps")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"connectHOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"WrapperComponent"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ReduxConnect"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"PureComponent"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("props"),n("span",{class:"token punctuation"},","),s(" context")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("props"),n("span",{class:"token punctuation"},","),s(" context"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("state "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token literal-property property"},"storeState"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"mapStateToProps"),n("span",{class:"token punctuation"},"("),s("context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getState"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`

      `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s(`
          `),n("span",{class:"token operator"},"<"),s("div"),n("span",{class:"token operator"},">"),s(`
            `),n("span",{class:"token operator"},"<"),s(`WrapperComponent
              `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("props"),n("span",{class:"token punctuation"},"}"),s(`
              `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token function"},"mapStateToProps"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getState"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),s(`
              `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token function"},"mapDispatchToProps"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},"."),s("dispatch"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),s(`
          `),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("div"),n("span",{class:"token operator"},">"),s(`
        `),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`

      `),n("span",{class:"token function"},"componentDidMount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("unsubscribe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"subscribe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setState"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token literal-property property"},"storeState"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"mapStateToProps"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getState"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
          `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`

      `),n("span",{class:"token function"},"componentWillUnmount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unsubscribe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    ReduxConnect`),n("span",{class:"token punctuation"},"."),s("contextType "),n("span",{class:"token operator"},"="),s(` storeContext
    `),n("span",{class:"token keyword"},"return"),s(` ReduxConnect
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" react "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" StoreContext "),n("span",{class:"token operator"},"="),s(" react"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(` StoreContext
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=p(`<p>在项目 <code>index.js</code> 文件中引入<code> store</code>，利用 <code>StoreContext</code> 的 <code>Provider</code> 组件，让 <code>App</code> 组件共享 <code>store</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./redux/store&#39;</span>
<span class="token keyword">import</span> StoreContext <span class="token keyword">from</span> <span class="token string">&#39;./redux/utils/context&#39;</span>
ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StoreContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StoreContext.Provider</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在想要使用 <code>store</code> 的组件中定义<code>mapStateToProps</code>、 <code>mapDispatchToProps</code>。把需要的<code>state</code> 和<code>dispatch</code>映射到想要使用 <code>store</code> 的组件的 <code>props</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> PureComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">import</span> connect <span class="token keyword">from</span> <span class="token string">&#39;./utils/connect&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">JIAA_ACTION</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store/actionCreators&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> state<span class="token punctuation">.</span>counter<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token constant">JIAA_ACTION</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> PureComponent <span class="token punctuation">{</span>
  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>counter<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span>button
          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          <span class="token operator">+</span><span class="token number">3</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> EnApp <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> EnApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然手动实现了<code>connect</code>帮助我们完成<code>redux</code>与<code>react</code> 的连接，但是实际上 <code>redux</code> 官方提供了 <code>react-redux</code> 的库，可以直接在项目中使用，并且实现的逻辑会更加的严谨和高效</p><ol><li>安装:</li></ol>`,6),I=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` react-redux
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` react-redux
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),L=p(`<ol start="2"><li>改造之前的代码：</li></ol><p>在 <code>index.js</code> 中将 <code>Provider</code> 组件替换成 <code>react-redux </code>中的 <code>Provider</code> 组件</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>组件中将 connect 替换成 react-redux 中 connect</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="redux-中异步操作" tabindex="-1"><a class="header-anchor" href="#redux-中异步操作" aria-hidden="true">#</a> redux 中异步操作</h2><p>事实上，网络请求到的数据也属于我们状态管理的一部分，更好的一种方式应该是将其也交给 <code>redux</code> 来管理</p><figure><img src="https://zfh-nanjing-bucket.oss-cn-nanjing.aliyuncs.com/blog-images/redux-异步操作.png" alt="redux-异步操作" tabindex="0"><figcaption>redux-异步操作</figcaption></figure><p>但是在 <code>redux</code> 中如何可以进行异步的操作呢？</p><ul><li>答案就是使用中间件</li><li>在<code>Koa</code>框架中，<code>Middleware</code> 可以帮助我们在请求和响应之间嵌入一些操作的代码，比如 <code>cookie </code>解析、日志记录、文件压缩等操作</li></ul><h3 id="理解中间件" tabindex="-1"><a class="header-anchor" href="#理解中间件" aria-hidden="true">#</a> 理解中间件</h3><p><code>redux</code> 也引入了中间件<code>Middleware</code>的概念：</p><ul><li><p>这个中间件的目的是在<code> dispatch</code> 的 <code>action</code> 和最终达到的 <code>reducer</code> 之间，扩展一些自己的代码。比如日志记录、调用异步接口、添加代码调试功能等等</p></li><li><p>我们现在要做的事情就是发送异步的网络请求，所以我们可以添加对应的中间件。官网推荐的、包括演示的网络请求的中间件是使用<code> redux-thunk</code></p></li></ul><p>r<code>edux-thunk </code>是如何做到让我们可以发送异步的请求呢？</p><ul><li><p>我们知道，默认情况下的 <code>dispatch(action)</code>，<code>action</code> 需要是一个 <code>JavaScript</code> 的对象</p></li><li><p><code>redux-thunk</code> 可以让<code>action</code> 可以是一个函数</p></li><li><p>该函数会被调用，并且会传给这个函数一个 <code>dispatch</code> 函数和 <code>getState</code> 函数：</p><ul><li><code>dispatch</code> 函数用于我们之后再次派发 <code>action</code></li><li><code>getState</code> 函数考虑到我们之后的一些操作需要依赖原来的状态，用于让我们可以获取之前的一些状态</li></ul></li></ul><h3 id="使用-redux-thunk" tabindex="-1"><a class="header-anchor" href="#使用-redux-thunk" aria-hidden="true">#</a> 使用 redux-thunk</h3><ol><li>安装 redux-thunk:</li></ol>`,17),N=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` redux-thunk
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` redux-thunk
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),O=p(`<ol><li>在创建 <code>store</code> 时传入应用了<code> middleware</code> 的 <code>enhance</code> 函数 <ul><li>通过 <code>applyMiddleware</code> 来结合多个 <code>Middleware</code>, 返回一个 <code>enhancer</code></li><li>将 <code>enhancer</code> 作为第二个参数传入到 <code>createStore</code> 中</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>applyMiddleware<span class="token punctuation">,</span> createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;redux&quot;</span>
<span class="token keyword">import</span> thunkMiddleware <span class="token keyword">from</span> <span class="token string">&#39;redux-thunk&#39;</span>
<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&#39;./reducer&#39;</span>
<span class="token keyword">const</span> storeEnhancer <span class="token operator">=</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkMiddleware<span class="token punctuation">)</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> storeEnhancer<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在<code>actionCreators.js</code>定义一个返回函数的 <code>action</code>：</li></ol><ul><li>注意：<strong>这里不是返回一个对象了，而是一个函数</strong></li><li>该函数在 <code>dispatch </code>之后会被执行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getDataAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">dispath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;react-thuck数据接受成功&#39;</span><span class="token punctuation">)</span>
      axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.imooc.com/api/http/search/suggest&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 我们依然需要触发相关的action，经过reducer的处理更新数据</span>
        <span class="token function">dispath</span><span class="token punctuation">(</span><span class="token function">dataAction</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>映射该 <code>action</code> 的 <code>dispatch </code>操作,和相关的 <code>store </code>中的<code> state</code>：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> state<span class="token punctuation">.</span>list<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getData</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">getDataAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>在 <code>componentDidMount </code>调用，就可以拿到数据</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redux-devtools" tabindex="-1"><a class="header-anchor" href="#redux-devtools" aria-hidden="true">#</a> redux-devtools</h2><p>利用这个工具，我们可以知道每次状态是如何被修改的，修改前后的状态变化等等</p><ol><li>在对应的浏览器中安装相关的插件，项目中安装这个包：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> @redux-devtools/extension
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>对 store 的 index.js 进行改造</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>applyMiddleware<span class="token punctuation">,</span> createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;redux&quot;</span>
<span class="token keyword">import</span> thunkMiddleware <span class="token keyword">from</span> <span class="token string">&#39;redux-thunk&#39;</span>
<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&#39;./reducer&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> composeWithDevTools <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@redux-devtools/extension&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span>   <span class="token function">composeWithDevTools</span><span class="token punctuation">(</span>
    <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkMiddleware <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于基本的 redux,只需要添加：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> devToolsEnhancer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@redux-devtools/extension&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
  reducer<span class="token punctuation">,</span>
  <span class="token function">devToolsEnhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redux-代码文件拆分" tabindex="-1"><a class="header-anchor" href="#redux-代码文件拆分" aria-hidden="true">#</a> Redux 代码文件拆分</h2><p>随着项目的不断扩大，可能导致 <code>store</code> 结构越来越复杂，<code>action </code>越来越多。所有有必要对代码结构进行拆分</p><p>代码结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├── store
│   ├── Count
│   │   ├── actionCreators.js
│   │   ├── constants.js
│   │   ├── index.js
│   │   └── reducer.js
│   ├── Data
│   │   ├── actionCreators.js
│   │   ├── constants.js
│   │   ├── index.js
│   │   └── reducer.js
│   ├── index.js
│   └── reducer.js	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>data</code>模块下代码：</p>`,22),J=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token constant"},"LIST_DATA"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./constants'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"getList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"listData"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"LIST_DATA"),n("span",{class:"token punctuation"},","),s(`
        listData
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// redux-thuck"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"getSomthing"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("dispatch"),n("span",{class:"token punctuation"},","),s(" getStore")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        axios`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'https://www.imooc.com/api/http/search/suggest'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"res"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
            console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token function"},"dispatch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"getList"),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"LIST_DATA"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'LIST_DATA'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s("getSomthing"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./actionCreators'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" DataReducer "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./reducer'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token punctuation"},"{"),s("getSomthing"),n("span",{class:"token punctuation"},","),s("DataReducer"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token constant"},"LIST_DATA"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"./constants"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" defaultStore"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"listData"),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"reducer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("state"),n("span",{class:"token operator"},"="),s("defaultStore"),n("span",{class:"token punctuation"},","),s("action")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"switch"),s(),n("span",{class:"token punctuation"},"("),s("action"),n("span",{class:"token punctuation"},"."),s("type"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"case"),s(),n("span",{class:"token constant"},"LIST_DATA"),n("span",{class:"token operator"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),s("state"),n("span",{class:"token punctuation"},","),n("span",{class:"token literal-property property"},"listData"),n("span",{class:"token operator"},":"),s("action"),n("span",{class:"token punctuation"},"."),s("listData"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(` state
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("p",null,"主模块代码：",-1),H=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s("counterReducer"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"./Count"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s("DataReducer"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"./Data"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"reducer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("state "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" action")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token literal-property property"},"countStore"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"counterReducer"),n("span",{class:"token punctuation"},"("),s("state"),n("span",{class:"token punctuation"},"."),s("countStore"),n("span",{class:"token punctuation"},","),s(" action"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"DataStore"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"DataReducer"),n("span",{class:"token punctuation"},"("),s("state"),n("span",{class:"token punctuation"},"."),s("DataStore"),n("span",{class:"token punctuation"},","),s(" action"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s("applyMiddleware"),n("span",{class:"token punctuation"},","),s(" createStore"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"redux"'),s(`

`),n("span",{class:"token keyword"},"import"),s(" reducer "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./reducer'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" thunkMiddleware "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'redux-thunk'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" composeWithDevTools "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@redux-devtools/extension'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" store "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createStore"),n("span",{class:"token punctuation"},"("),s("reducer"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"composeWithDevTools"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token function"},"applyMiddleware"),n("span",{class:"token punctuation"},"("),s("thunkMiddleware "),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(` store
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=p(`<h2 id="combinereducers-函数" tabindex="-1"><a class="header-anchor" href="#combinereducers-函数" aria-hidden="true">#</a> combineReducers 函数</h2><p>目前我们合并的方式是通过每次调用 <code>reducer</code> 函数自己来返回一个新的对象</p><p>事实上，<code>redux</code>给我们提供了一个 <code>combineReducers</code> 函数可以方便的让我们对多个 <code>reducer </code>进行合并：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>counterReducer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Count&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>DataReducer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Data&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>combineReducers<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;redux&quot;</span>

<span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// reducer的目的就是为了返回state</span>
    <span class="token literal-property property">countStore</span><span class="token operator">:</span> counterReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">DataStore</span><span class="token operator">:</span> DataReducer
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> reducer
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),G={id:"rtk",tabindex:"-1"},Q=n("a",{class:"header-anchor",href:"#rtk","aria-hidden":"true"},"#",-1),X={href:"https://redux-toolkit.js.org/",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"redux",-1),Y=p(`<p><code>redux</code>的编写逻辑过于繁琐和麻烦，<code>RTK</code>的目的就是解决这个问题</p><p>安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @reduxjs/toolkit react-redux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="基本使用-1" tabindex="-1"><a class="header-anchor" href="#基本使用-1" aria-hidden="true">#</a> 基本使用</h3><ol><li>将之前的<code>store</code>代码结构作以调整</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>└── store
    ├── index.js
    └── moudles
        ├── count.js
        └── data.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建<code>store</code></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>configureStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@reduxjs/toolkit&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 日志打印中间件，需要自己安装</span>
<span class="token keyword">import</span> logger <span class="token keyword">from</span> <span class="token string">&#39;redux-logger&#39;</span>
<span class="token keyword">import</span>  counterReducer  <span class="token keyword">from</span> <span class="token string">&quot;./moudles/count&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">configureStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 传入多个reducer,或单个reducer函数</span>
    <span class="token literal-property property">reducer</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">countStore</span><span class="token operator">:</span>counterReducer
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 应用中间件｜getDefaultMiddleware获取默认中间件在和我们要用的其他中间件concat返回中间件数组</span>
  <span class="token comment">// 默认启用devtools和redux-thunk</span>
  <span class="token comment">// middleware:[thunk, logger],</span>
    <span class="token function-variable function">middleware</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">getDefaultMiddleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getDefaultMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>logger<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// 默认开启devTools</span>
    <span class="token literal-property property">devTools</span><span class="token operator">:</span><span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>定义单个模块<code>store</code></li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createSlice<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@reduxjs/toolkit&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> countSlice<span class="token operator">=</span><span class="token function">createSlice</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 显示在redux devtools中的名称</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 初始值</span>
    <span class="token literal-property property">initialState</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 里面定义各种action</span>
    <span class="token literal-property property">reducers</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span><span class="token punctuation">{</span>payload<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token comment">// 在这里直接可以修改state</span>
            state<span class="token punctuation">.</span>count<span class="token operator">=</span>state<span class="token punctuation">.</span>count<span class="token operator">+</span>payload
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>addNumber<span class="token punctuation">}</span><span class="token operator">=</span>countSlice<span class="token punctuation">.</span>actions

<span class="token keyword">export</span> <span class="token keyword">default</span> countSlice<span class="token punctuation">.</span>reducer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><code>RTK</code>仅仅是简化了<code>rdux</code>的逻辑编写，而连接仍需要通过<code>react-redux</code>,和之前的写法是一样的</li></ol><h3 id="异步处理" tabindex="-1"><a class="header-anchor" href="#异步处理" aria-hidden="true">#</a> 异步处理</h3><ol><li>引入<code>createAsyncThunk</code>,使用该<code>api</code>创建一个<code>thunk</code>,创建时第一个参数显示在<code>devtools</code>，表示是哪一个<code>thunk</code>，第二个函数用于异步数据的获取，必须返回一个<code>promise</code></li><li>在<code>createSlice</code>中<code> extraReducers</code>选项，操作<code>state</code>。有两种方式对象或者函数，官方推荐使用函数(使用对象貌似会导致<code>ts</code>使用比较麻烦，还没用到)。<code>fulfilled</code>表示数据成功获取到需要执行的逻辑</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createSlice<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@reduxjs/toolkit&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>createAsyncThunk<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@reduxjs/toolkit&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getListData <span class="token operator">=</span> <span class="token function">createAsyncThunk</span><span class="token punctuation">(</span><span class="token string">&#39;getListData&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//组件调用传递过来的参数</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.imooc.com/api/http/search/suggest&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dataSlice <span class="token operator">=</span> <span class="token function">createSlice</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reducers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">extraReducers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>getListData<span class="token punctuation">.</span>fulfilled<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">{</span>payload<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 在此直接操作state</span>
            state<span class="token punctuation">.</span>list<span class="token operator">=</span>payload
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// extraReducers:(builder)=&gt;{</span>
    <span class="token comment">//     builder.addCase(getListData.fulfilled,(state,{payload})=&gt;{</span>
    <span class="token comment">//         state.list=payload</span>
    <span class="token comment">//     })</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>getListData<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> dataSlice<span class="token punctuation">.</span>reducer
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>跟普通的<code>aciton</code>一样在组件中进行映射，消费：</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>connect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-redux&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>addNumber<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./store/moudles/count&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>PureComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>getListData<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./store/moudles/data&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">PureComponent</span><span class="token punctuation">{</span>
    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>add<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                    </span><span class="token punctuation">{</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>word<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span><span class="token operator">=</span><span class="token parameter">state</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span>state<span class="token punctuation">.</span>countStore<span class="token punctuation">.</span>count<span class="token punctuation">,</span>
    <span class="token literal-property property">list</span><span class="token operator">:</span>state<span class="token punctuation">.</span>dataStore<span class="token punctuation">.</span>list
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span><span class="token operator">=</span><span class="token parameter">dispatch</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">getList</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">getListData</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span>mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),Z={id:"redux中的hook",tabindex:"-1"},$=n("a",{class:"header-anchor",href:"#redux中的hook","aria-hidden":"true"},"#",-1),nn=n("h2",{id:"rtkq",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rtkq","aria-hidden":"true"},"#"),s(" RTKQ")],-1);function sn(an,en){const l=u("ExternalLinkIcon"),i=u("CodeTabs"),r=u("Badge");return k(),v("div",null,[n("div",b,[h,n("p",null,[n("a",g,[s("Redux 入门教程（一）：基本用法"),c(l)])]),n("p",null,[n("a",y,[s("redux"),c(l)])]),n("p",null,[n("a",x,[s("redux-toolkit"),c(l)])])]),w,c(i,{id:"132",data:[{title:"npm"},{title:"yarn"}]},{tab0:a(({title:e,value:t,isActive:o})=>[f]),tab1:a(({title:e,value:t,isActive:o})=>[j]),_:1}),_,c(i,{id:"171",data:[{title:"actionCreators.js"},{title:"constants.js"},{title:"reducer.js"},{title:"index.js"}]},{tab0:a(({title:e,value:t,isActive:o})=>[S]),tab1:a(({title:e,value:t,isActive:o})=>[A]),tab2:a(({title:e,value:t,isActive:o})=>[T]),tab3:a(({title:e,value:t,isActive:o})=>[D]),_:1},8,["data"]),C,c(i,{id:"200",data:[{title:"connect.js"},{title:"context.js"}]},{tab0:a(({title:e,value:t,isActive:o})=>[R]),tab1:a(({title:e,value:t,isActive:o})=>[q]),_:1},8,["data"]),P,c(i,{id:"228",data:[{title:"npm"},{title:"yarn"}]},{tab0:a(({title:e,value:t,isActive:o})=>[I]),tab1:a(({title:e,value:t,isActive:o})=>[M]),_:1}),L,c(i,{id:"335",data:[{title:"npm"},{title:"yarn"}]},{tab0:a(({title:e,value:t,isActive:o})=>[N]),tab1:a(({title:e,value:t,isActive:o})=>[E]),_:1}),O,c(i,{id:"438",data:[{title:"actionCreators.js"},{title:"constants.js"},{title:"index.js"},{title:"reducer.js"}]},{tab0:a(({title:e,value:t,isActive:o})=>[J]),tab1:a(({title:e,value:t,isActive:o})=>[B]),tab2:a(({title:e,value:t,isActive:o})=>[W]),tab3:a(({title:e,value:t,isActive:o})=>[K]),_:1},8,["data"]),V,c(i,{id:"455",data:[{title:"reducer.js"},{title:"index.js"}]},{tab0:a(({title:e,value:t,isActive:o})=>[H]),tab1:a(({title:e,value:t,isActive:o})=>[U]),_:1},8,["data"]),z,n("h2",G,[Q,s(" RTK "),c(r,{text:"官方推荐",type:"tip"})]),n("p",null,[n("a",X,[s("Redux ToolKit"),c(l)]),s("是目前官方推荐编写"),F,s("逻辑的方法")]),Y,n("h2",Z,[$,s(" redux中的hook "),c(r,{text:"官方推荐",type:"tip"})]),nn])}const on=d(m,[["render",sn],["__file","Redux.html.vue"]]);export{on as default};
